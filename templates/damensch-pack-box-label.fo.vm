<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:fo="http://www.w3.org/1999/XSL/Format" version="1.0">
  <xsl:output encoding="UTF-8" indent="yes" method="xml" standalone="no" omit-xml-declaration="no"/>
  <xsl:template match="data">
    <fo:root language="EN" font-size="8pt" font-family="arial">
      <fo:layout-master-set>
        <fo:simple-page-master master-name="page-master" page-height="101.6mm" page-width="152.4mm" margin-top="3mm" margin-bottom="5mm" margin-left="15mm" margin-right="15mm">
          <fo:region-body region-name="body"/>
          <fo:region-before region-name="header" extent="5mm" margin-bottom="0mm" margin-top="0mm"/>
 display-align="before" precedence="true" />
          <fo:region-after region-name="footer" extent="15mm" margin-bottom="0mm" margin-top="0mm"/>
        </fo:simple-page-master>
      </fo:layout-master-set>
      <fo:page-sequence master-reference="page-master">
        <fo:static-content flow-name="header">
          <fo:block></fo:block>
        </fo:static-content>
        <fo:static-content flow-name="footer">
          <!-- https://stackoverflow.com/questions/391759/xsl-fo-inline-alignment -->
          <fo:block>
            Dispatch Date: #writeCurrentDate()
          </fo:block>
          <fo:block text-align="end">
            <fo:block font-weight="bold">
              <fo:inline background-color="black" padding-left="2pt" padding-right="2pt" color="white" font-size="12pt">Seller Name</fo:inline>
            </fo:block>
            <fo:block>
              #writeString($data.clientName)
            </fo:block>
            <fo:block>
              #writeSellerAddress($data.fromAddress)
            </fo:block>
          </fo:block>
        </fo:static-content>
        <fo:flow flow-name="body" reference-orientation="0">
          <fo:table table-layout="fixed" width="100%">
            <fo:table-column column-number="1" column-width="80%"/>
            <fo:table-column column-number="2" column-width="20%"/>
            <fo:table-body>
              <fo:table-row>
                <fo:table-cell padding-after="10pt">
                  <fo:block>
                    <fo:inline font-size="20pt">BOX NO: #writeString($data.boxId)</fo:inline>
                  </fo:block>
                </fo:table-cell>
                <fo:table-cell padding-after="10pt">
                  <fo:block>
                    <fo:inline font-size="10pt">Box $data.boxSerialNo of $data.totalBoxCount</fo:inline>
                  </fo:block>
                </fo:table-cell>
              </fo:table-row>
              <fo:table-row>
                <fo:table-cell padding-after="10pt" number-columns-spanned="2">
                  <fo:block>
                    <fo:inline font-size="20pt">BOX QTY: #writeString($data.boxDetails.packedQuantity)</fo:inline>
                  </fo:block>
                </fo:table-cell>
              </fo:table-row>
              <fo:table-row>
                <fo:table-cell padding-after="10pt" number-columns-spanned="2">
                  <fo:block>
                    <fo:inline font-size="20pt">STN NO: #writeString($data.orderNo)</fo:inline>
                  </fo:block>
                </fo:table-cell>
              </fo:table-row>
              <fo:table-row>
                <fo:table-cell padding-after="10pt" number-columns-spanned="2">
                  <fo:block>
                    <fo:inline font-size="20pt">STR NO: #writeString($data.orderNo)</fo:inline>
                  </fo:block>
                </fo:table-cell>
              </fo:table-row>
              <fo:table-row>
                <fo:table-cell padding-after="10pt" number-columns-spanned="2">
                  <fo:block>
                    <fo:inline font-size="20pt">CARTON NO: #writeString($data.boxId)</fo:inline>
                  </fo:block>
                </fo:table-cell>
              </fo:table-row>
              <fo:table-row>
                <fo:table-cell padding-after="10pt" number-columns-spanned="2">
                  <fo:block>
                    <fo:inline>#writeBiggerBarcodeWithoutText($data.boxId)</fo:inline>
                    <fo:block>
                      <fo:inline font-size="10pt" font-weight="bold">#writeString($data.boxId)</fo:inline>
                    </fo:block>
                  </fo:block>
                </fo:table-cell>
              </fo:table-row>
            </fo:table-body>
          </fo:table>
        </fo:flow>
      </fo:page-sequence>
    </fo:root>
  </xsl:template>
</xsl:stylesheet>

#macro( writeString $str)
  #if($str)

  <![CDATA[$str]]>
  #end
#end

#macro( writeSTNNo)
  #if($data.awbNo)
  <![CDATA[$data.awbNo]]>
  #else
  <![CDATA[$data.shipmentCode]]>
  #end
#end

#macro( writeStringWithSpaceAfterComma $str)
<!--
  Replacement of "," with ", " is done only when there is not already a space
 after the ",".
 Input     ->   Output
 "abc,def, ghi" -> "abc, def, ghi"
-->
  #if($str)
  <![CDATA[$str.replaceAll(",(?! )",", ")]]>
  #end
#end

#macro( writeSellerAddress $add)
  <fo:block>
    <fo:inline font-size="8pt">#writeString($add.city),</fo:inline>

    <fo:inline font-size="8pt">#writeString($add.state)-</fo:inline>

    <fo:inline>#writeString($add.zip)</fo:inline>
  </fo:block>
#end

#macro( writeBiggerBarcodeWithoutText $str)
  #if($str.toString().contains("&"))
    #set( $str = $str.replace("&", "&amp;") )
  #end
  #if($str.toString().contains("<"))
    #set( $str = $str.replace("<", "&lt;") )
  #end
  #if($str.toString().contains(">"))
    #set( $str = $str.replace(">", "&gt;") )
  #end
  #if($str.toString().contains("'"))
    #set( $str = $str.replace("'", "&apos;") )
  #end
  #if($str.toString().contains('"'))
    #set( $str = $str.replace('"', "&quot;") )
  #end
  #if($str)
  <fo:instream-foreign-object>
    <bc:barcode xmlns:bc="http://barcode4j.krysalis.org/ns"
                message="$str">
      <bc:code128>
        <bc:height>20mm</bc:height>
        <human-readable>
          <placement>none</placement>
        </human-readable>
      </bc:code128>
    </bc:barcode>
  </fo:instream-foreign-object>
  #end
#end

  #macro(writeDimension $str)
  #if($str)
  #writeString($str)
  #else
  1.0
  #end
  #end

  #macro( writeCurrentDate)
    $date.get('d-M-yyyy')
  #end